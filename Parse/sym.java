
//----------------------------------------------------
// The following code was generated by CUP v0.10g
// Thu Oct 23 12:44:07 CDT 2025
//----------------------------------------------------

package Parse;

/** CUP generated class containing symbol constants. */
public class sym {
  /* terminals */
  static final int SHORT = 42;
  static final int TIMES = 18;
  static final int GT = 24;
  static final int ARROW = 57;
  static final int DIVASSIGN = 56;
  static final int CONST = 76;
  static final int GE = 25;
  static final int PERIOD = 68;
  static final int REGISTER = 81;
  static final int ENUM = 47;
  static final int RBRACK = 13;
  static final int SIZEOF = 39;
  static final int COMMA = 7;
  static final int RBRACE = 15;
  static final int RPAREN = 11;
  static final int LBRACK = 12;
  static final int LT = 22;
  static final int INCREMENT = 61;
  static final int SUBASSIGN = 58;
  static final int DOUBLE = 41;
  static final int STRUCT = 82;
  static final int LBRACE = 14;
  static final int BWISEANDASSIGN = 63;
  static final int LPAREN = 10;
  static final int MODASSIGN = 64;
  static final int NOT = 71;
  static final int TILDE = 65;
  static final int LE = 23;
  static final int VAR = 36;
  static final int FLOAT = 43;
  static final int BITWISEAND = 69;
  static final int GOTO = 46;
  static final int EQ = 20;
  static final int LSHIFTASSIGN = 50;
  static final int MODULUS = 70;
  static final int LONG = 45;
  static final int PLUS = 16;
  static final int DIVIDE = 19;
  static final int QUESTION = 75;
  static final int UNION = 83;
  static final int WHILE = 31;
  static final int ASSIGN = 28;
  static final int CHAR = 48;
  static final int ADDASSIGN = 60;
  static final int SWITCH = 72;
  static final int DO = 33;
  static final int FOR = 32;
  static final int EXTERN = 78;
  static final int VOID = 44;
  static final int RETURN = 40;
  static final int ELSE = 30;
  static final int BREAK = 34;
  static final int FUN = 35;
  static final int INT = 6;
  static final int STRING_LITERAL = 3;
  static final int EOF = 0;
  static final int SEMICOLON = 9;
  static final int DEFAULT = 74;
  static final int ELIPSES = 51;
  static final int MULASSIGN = 62;
  static final int DECREMENT = 59;
  static final int MINUS = 17;
  static final int OR = 27;
  static final int error = 1;
  static final int DECIMAL_LITERAL = 4;
  static final int CONTINUE = 37;
  static final int IF = 29;
  static final int BWISEOR = 66;
  static final int ID = 2;
  static final int COLON = 8;
  static final int BWISEXOR = 67;
  static final int BWISEORASSIGN = 52;
  static final int RSHIFTASSIGN = 49;
  static final int VOLATILE = 77;
  static final int CHAR_LITERAL = 5;
  static final int CASE = 73;
  static final int RSHIFT = 54;
  static final int BWISEXORASSIGN = 53;
  static final int NEQ = 21;
  static final int AND = 26;
  static final int STATIC = 79;
  static final int LSHIFT = 55;
  static final int TYPEDEF = 38;
  static final int AUTO = 80;

  /* non terminals */
  static final int DeclarationList = 41;
  static final int LogicalAndExpression = 14;
  static final int ExclusiveOrExpression = 16;
  static final int struct_declaration_list = 62;
  static final int bitfield_list = 47;
  static final int Constant = 30;
  static final int initializer = 58;
  static final int pointer_list = 56;
  static final int Unary_Operator = 28;
  static final int enumerator = 65;
  static final int Cast_Expression = 29;
  static final int $START = 0;
  static final int TypeName = 10;
  static final int Var = 8;
  static final int initializer_list = 60;
  static final int ExpressionStatement = 34;
  static final int initialization = 59;
  static final int StatementList = 40;
  static final int struct_or_union = 63;
  static final int name = 46;
  static final int CastExpression = 2;
  static final int UnaryExpression = 23;
  static final int ArgumentExpressionList = 5;
  static final int StatementListOpt = 38;
  static final int CompoundStatement = 33;
  static final int AdditiveExpression = 21;
  static final int AndExpression = 17;
  static final int InclusiveOrExpression = 15;
  static final int expression_array_type_list = 51;
  static final int PrimaryExpression = 26;
  static final int ArgumentExpressionListOpt = 6;
  static final int bitfield_value = 48;
  static final int enumerator_list = 64;
  static final int DeclarationListOpt = 39;
  static final int parameter_type_list = 69;
  static final int type_parameters = 66;
  static final int empty_array_type_list = 49;
  static final int MultiplicativeExpression = 22;
  static final int LabeledStatement = 32;
  static final int AssignmentOperator = 24;
  static final int brackets_list = 55;
  static final int AssignmentExpression = 11;
  static final int ConditionalExpression = 12;
  static final int type_name = 57;
  static final int EqualityExpression = 18;
  static final int JumpStatement = 37;
  static final int Identifier = 27;
  static final int ShiftExpression = 20;
  static final int Exp = 1;
  static final int parameter_list = 68;
  static final int expression_array_type = 52;
  static final int empty_array_type = 50;
  static final int LogicalOrExpression = 13;
  static final int type_augments = 54;
  static final int SelectionStatement = 35;
  static final int Expresson = 4;
  static final int UnaryOperator = 7;
  static final int LabeledStatementList = 9;
  static final int Statement = 31;
  static final int Expression = 3;
  static final int parameters = 67;
  static final int struct_or_union_declarator = 61;
  static final int declaration = 45;
  static final int Declaration = 42;
  static final int Program = 44;
  static final int RelationalExpression = 19;
  static final int ExpressionOpt = 43;
  static final int IterationStatement = 36;
  static final int PostfixExpression = 25;
  static final int type = 53;
}

